code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let
Next Token :  rec, Posbility: 0.3789
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec
Next Token :  , Posbility: 0.4102
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec 
Next Token : n, Posbility: 0.1816
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec n
Next Token : large, Posbility: 0.4414
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlarge
Next Token : st, Posbility: 0.9805
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest
Next Token :  , Posbility: 0.4062
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest 
Next Token : lst, Posbility: 0.2275
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst
Next Token :  , Posbility: 0.6328
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst 
Next Token : n, Posbility: 0.9805
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n
Next Token :  =, Posbility: 0.9492
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
Next Token : 
, Posbility: 0.8203
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =

Next Token :   , Posbility: 0.8086
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  
Next Token : match, Posbility: 0.5156
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match 
Next Token : lst, Posbility: 0.7422
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst
Next Token :  with, Posbility: 0.9922
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
Next Token : 
, Posbility: 0.9609
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with

Next Token :   , Posbility: 0.8984
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  
Next Token : |, Posbility: 0.9688
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  |
Next Token :  [], Posbility: 0.9570
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | []
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] 
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] ->
Next Token :  [], Posbility: 0.8477
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  |
Next Token :  , Posbility: 0.7578
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | 
Next Token : x, Posbility: 0.4785
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x
Next Token :  , Posbility: 0.5312
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x 
Next Token : ::, Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x ::
Next Token :  , Posbility: 0.8672
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: 
Next Token : x, Posbility: 0.8477
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: x
Next Token : s, Posbility: 0.9805
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs
Next Token :  , Posbility: 0.8398
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs 
Next Token : ->, Posbility: 0.9648
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
Next Token : 
, Posbility: 0.6602
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->

Next Token :       , Posbility: 0.5117
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      
Next Token : if, Posbility: 0.4434
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if 
Next Token : n, Posbility: 0.6641
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n
Next Token :  =, Posbility: 0.4902
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n =
Next Token :  0, Posbility: 0.4941
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0
Next Token :  then, Posbility: 0.9141
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then
Next Token :  , Posbility: 0.5938
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then 
Next Token : x, Posbility: 0.9141
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then x
Next Token : s, Posbility: 0.7891
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
Next Token : 
, Posbility: 0.7383
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs

Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else
Next Token :  , Posbility: 0.7422
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else 
Next Token : if, Posbility: 0.7070
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if 
Next Token : n, Posbility: 0.7500
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n
Next Token :  , Posbility: 0.6680
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n 
Next Token : >, Posbility: 0.4922
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n >
Next Token :  0, Posbility: 0.5703
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0
Next Token :  then, Posbility: 0.8750
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then
Next Token :  , Posbility: 0.6367
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then 
Next Token : n, Posbility: 0.4844
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then n
Next Token : large, Posbility: 0.9844
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlarge
Next Token : st, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest 
Next Token : x, Posbility: 0.8008
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest x
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs 
Next Token : (, Posbility: 0.8789
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n
Next Token :  , Posbility: 0.8594
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n 
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n -
Next Token :  1), Posbility: 0.9844
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
Next Token : 
, Posbility: 0.6719
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)

Next Token :       , Posbility: 0.9688
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      
Next Token : else, Posbility: 0.9844
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else
Next Token :  , Posbility: 0.8398
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else 
Next Token : x, Posbility: 0.4453
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else x
Next Token : s, Posbility: 0.4648
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else xs
Next Token : 
, Posbility: 0.7773
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else xs

Next Token :   , Posbility: 0.6367
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else xs
  
Next Token : |, Posbility: 0.8789
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else xs
  |
Next Token :  , Posbility: 0.8867
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else xs
  | 
Next Token : x, Posbility: 0.5078
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else xs
  | x
Next Token :  , Posbility: 0.8633
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else xs
  | x 
Next Token : ::, Posbility: 0.9336
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else xs
  | x ::
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else xs
  | x :: 
Next Token : x, Posbility: 0.8477
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else xs
  | x :: x
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else xs
  | x :: xs
Next Token :  , Posbility: 0.9258
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else xs
  | x :: xs 
Next Token : ->, Posbility: 0.9570
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else xs
  | x :: xs ->
Next Token :  , Posbility: 0.5977
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else xs
  | x :: xs -> 
Next Token : x, Posbility: 0.4258
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else xs
  | x :: xs -> x
Next Token :  , Posbility: 0.8203
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else xs
  | x :: xs -> x 
Next Token : ::, Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else xs
  | x :: xs -> x ::
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else xs
  | x :: xs -> x :: 
Next Token : n, Posbility: 0.8398
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else xs
  | x :: xs -> x :: n
Next Token : large, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else xs
  | x :: xs -> x :: nlarge
Next Token : st, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else xs
  | x :: xs -> x :: nlargest
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else xs
  | x :: xs -> x :: nlargest 
Next Token : x, Posbility: 0.9766
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else xs
  | x :: xs -> x :: nlargest x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else xs
  | x :: xs -> x :: nlargest xs
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else xs
  | x :: xs -> x :: nlargest xs 
Next Token : n, Posbility: 0.6211
---------------------------
code:
 (* Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. *)
let rec nlargest lst n =
  match lst with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else if n > 0 then nlargest xs (n - 1)
      else xs
  | x :: xs -> x :: nlargest xs n
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END--------

processing time : :4.1915552616119385

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>