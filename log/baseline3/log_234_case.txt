code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let
Next Token :  rec, Posbility: 0.4473
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec
Next Token :  count, Posbility: 0.5703
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count
Next Token : _, Posbility: 0.6836
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_
Next Token : all, Posbility: 0.2891
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all
Next Token :  , Posbility: 0.3438
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all 
Next Token : x, Posbility: 0.1709
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all x
Next Token : s, Posbility: 0.3906
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs
Next Token :  =, Posbility: 0.7227
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
Next Token : 
, Posbility: 0.8125
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =

Next Token :   , Posbility: 0.7695
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  
Next Token : match, Posbility: 0.7344
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match 
Next Token : x, Posbility: 0.8906
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match x
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs
Next Token :  with, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
Next Token : 
, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with

Next Token :   , Posbility: 0.9180
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  
Next Token : |, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  |
Next Token :  [], Posbility: 0.8047
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | []
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] 
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] ->
Next Token :  , Posbility: 0.3887
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> 
Next Token : (0,, Posbility: 0.3730
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0,
Next Token :  , Posbility: 0.8281
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, 
Next Token : []), Posbility: 0.6172
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
Next Token : 
, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  |
Next Token :  , Posbility: 0.8242
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | 
Next Token : x, Posbility: 0.6133
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x
Next Token :  , Posbility: 0.6367
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x 
Next Token : ::, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x ::
Next Token :  , Posbility: 0.8320
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: 
Next Token : x, Posbility: 0.8438
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: x
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs
Next Token :  , Posbility: 0.7930
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs 
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
Next Token : 
, Posbility: 0.4434
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->

Next Token :       , Posbility: 0.6250
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      
Next Token : let, Posbility: 0.7539
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let
Next Token :  , Posbility: 0.5664
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let 
Next Token : (, Posbility: 0.5742
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let (
Next Token : count, Posbility: 0.2656
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let (count
Next Token : ,, Posbility: 0.8438
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let (count,
Next Token :  , Posbility: 0.4707
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let (count, 
Next Token : x, Posbility: 0.5273
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let (count, x
Next Token : s, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let (count, xs
Next Token : ), Posbility: 0.4434
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let (count, xs)
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let (count, xs) =
Next Token :  count, Posbility: 0.9453
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let (count, xs) = count
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let (count, xs) = count_
Next Token : all, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let (count, xs) = count_all
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let (count, xs) = count_all 
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let (count, xs) = count_all x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let (count, xs) = count_all xs
Next Token :  in, Posbility: 0.9414
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let (count, xs) = count_all xs in
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let (count, xs) = count_all xs in

Next Token :       , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let (count, xs) = count_all xs in
      
Next Token : (, Posbility: 0.8203
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let (count, xs) = count_all xs in
      (
Next Token : count, Posbility: 0.9219
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let (count, xs) = count_all xs in
      (count
Next Token :  +, Posbility: 0.9258
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let (count, xs) = count_all xs in
      (count +
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let (count, xs) = count_all xs in
      (count + 
Next Token : 1,, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let (count, xs) = count_all xs in
      (count + 1,
Next Token :  , Posbility: 0.6094
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let (count, xs) = count_all xs in
      (count + 1, 
Next Token : x, Posbility: 0.9414
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let (count, xs) = count_all xs in
      (count + 1, x
Next Token : s, Posbility: 0.9570
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let (count, xs) = count_all xs in
      (count + 1, xs
Next Token : ), Posbility: 0.9648
---------------------------
code:
 (* Write a  function to count the occurence of all elements of list in a tuple. *)
let rec count_all xs =
  match xs with
  | [] -> (0, [])
  | x :: xs ->
      let (count, xs) = count_all xs in
      (count + 1, xs)
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END--------

processing time : :2.92592453956604

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>