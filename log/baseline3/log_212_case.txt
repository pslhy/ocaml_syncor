code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let
Next Token :  , Posbility: 0.3672
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let 
Next Token : rear, Posbility: 0.1562
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear
Next Token : _, Posbility: 0.7188
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_
Next Token : index, Posbility: 0.6445
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index
Next Token : _, Posbility: 0.4141
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_
Next Token : of, Posbility: 0.3496
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of
Next Token : _, Posbility: 0.8945
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_
Next Token : strings, Posbility: 0.3945
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings
Next Token :  , Posbility: 0.4766
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings 
Next Token : (, Posbility: 0.2852
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (
Next Token : strings, Posbility: 0.1904
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings
Next Token :  , Posbility: 0.4395
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings 
Next Token : :, Posbility: 0.9883
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings :
Next Token :  string, Posbility: 0.7070
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string
Next Token :  list, Posbility: 0.6875
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list
Next Token : ), Posbility: 0.9883
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list)
Next Token :  =, Posbility: 0.8008
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
Next Token : 
, Posbility: 0.8867
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =

Next Token :   , Posbility: 0.8828
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  
Next Token : let, Posbility: 0.4980
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let
Next Token :  rec, Posbility: 0.3750
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec
Next Token :  , Posbility: 0.3906
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec 
Next Token : helper, Posbility: 0.2598
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper
Next Token :  , Posbility: 0.4219
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper 
Next Token : (, Posbility: 0.3438
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (
Next Token : i, Posbility: 0.1426
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i
Next Token :  , Posbility: 0.5430
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i 
Next Token : :, Posbility: 0.9922
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i :
Next Token :  int, Posbility: 0.9648
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int
Next Token : ), Posbility: 0.9180
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int)
Next Token :  , Posbility: 0.5859
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) 
Next Token : (, Posbility: 0.3945
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (
Next Token : s, Posbility: 0.2061
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s
Next Token :  , Posbility: 0.8750
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s 
Next Token : :, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s :
Next Token :  string, Posbility: 0.9805
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string
Next Token : ), Posbility: 0.4766
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string)
Next Token :  , Posbility: 0.4590
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) 
Next Token : :, Posbility: 0.4727
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) :
Next Token :  int, Posbility: 0.6133
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int
Next Token :  =, Posbility: 0.5898
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =

Next Token :     , Posbility: 0.9688
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    
Next Token : if, Posbility: 0.5352
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if
Next Token :  i, Posbility: 0.6680
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i
Next Token :  =, Posbility: 0.4062
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i =
Next Token :  , Posbility: 0.2441
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = 
Next Token : List, Posbility: 0.7461
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length
Next Token :  strings, Posbility: 0.8398
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings
Next Token :  then, Posbility: 0.7695
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then
Next Token :  , Posbility: 0.3906
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then 
Next Token : s, Posbility: 0.7227
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
Next Token : 
, Posbility: 0.6914
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else
Next Token :  , Posbility: 0.8594
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else 
Next Token : helper, Posbility: 0.8750
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else helper
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else helper 
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else helper (
Next Token : i, Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else helper (i
Next Token :  +, Posbility: 0.8633
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else helper (i +
Next Token :  1), Posbility: 0.9922
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else helper (i + 1)
Next Token :  , Posbility: 0.9023
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else helper (i + 1) 
Next Token : (, Posbility: 0.9375
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else helper (i + 1) (
Next Token : List, Posbility: 0.3477
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else helper (i + 1) (List
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else helper (i + 1) (List.
Next Token : get, Posbility: 0.1680
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else helper (i + 1) (List.get
Next Token :  strings, Posbility: 0.8281
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else helper (i + 1) (List.get strings
Next Token :  i, Posbility: 0.9492
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else helper (i + 1) (List.get strings i
Next Token : ), Posbility: 0.9688
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else helper (i + 1) (List.get strings i)
Next Token : 
, Posbility: 0.8477
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else helper (i + 1) (List.get strings i)

Next Token :   , Posbility: 0.8945
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else helper (i + 1) (List.get strings i)
  
Next Token : in, Posbility: 0.9805
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else helper (i + 1) (List.get strings i)
  in
Next Token : 
, Posbility: 0.9297
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else helper (i + 1) (List.get strings i)
  in

Next Token :   , Posbility: 0.9844
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else helper (i + 1) (List.get strings i)
  in
  
Next Token : List, Posbility: 0.4082
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else helper (i + 1) (List.get strings i)
  in
  List
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else helper (i + 1) (List.get strings i)
  in
  List.
Next Token : map, Posbility: 0.9141
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else helper (i + 1) (List.get strings i)
  in
  List.map
Next Token :  , Posbility: 0.7773
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else helper (i + 1) (List.get strings i)
  in
  List.map 
Next Token : helper, Posbility: 0.8125
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else helper (i + 1) (List.get strings i)
  in
  List.map helper
Next Token :  0, Posbility: 0.9023
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else helper (i + 1) (List.get strings i)
  in
  List.map helper 0
Next Token :  strings, Posbility: 0.8750
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings : string list) =
  let rec helper (i : int) (s : string) : int =
    if i = List.length strings then s
    else helper (i + 1) (List.get strings i)
  in
  List.map helper 0 strings
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END--------

processing time : :3.761373996734619

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>