code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let
Next Token :  , Posbility: 0.5547
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let 
Next Token : common, Posbility: 0.8945
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common
Next Token : _, Posbility: 0.5859
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_
Next Token : elements, Posbility: 0.7109
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements
Next Token :  l, Posbility: 0.3711
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l
Next Token : 1, Posbility: 0.9844
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1
Next Token :  l, Posbility: 0.9648
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2
Next Token :  l, Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3
Next Token :  =, Posbility: 0.9258
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
Next Token : 
, Posbility: 0.7852
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =

Next Token :   , Posbility: 0.7891
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  
Next Token : let, Posbility: 0.7500
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let
Next Token :  rec, Posbility: 0.4766
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec
Next Token :  , Posbility: 0.4434
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec 
Next Token : common, Posbility: 0.2383
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common
Next Token : _, Posbility: 0.7539
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_
Next Token : elements, Posbility: 0.5977
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements
Next Token : _, Posbility: 0.5391
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_
Next Token : aux, Posbility: 0.3242
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux
Next Token :  l, Posbility: 0.3926
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l
Next Token : 1, Posbility: 0.9531
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1
Next Token :  l, Posbility: 0.9180
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2
Next Token :  l, Posbility: 0.9023
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3
Next Token :  =, Posbility: 0.3516
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
Next Token : 
, Posbility: 0.8711
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =

Next Token :     , Posbility: 0.9453
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    
Next Token : match, Posbility: 0.5781
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match
Next Token :  , Posbility: 0.5508
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match 
Next Token : (, Posbility: 0.7656
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (
Next Token : l, Posbility: 0.6602
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l
Next Token : 1,, Posbility: 0.8594
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1,
Next Token :  l, Posbility: 0.9492
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l
Next Token : 2,, Posbility: 0.8320
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2,
Next Token :  l, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l
Next Token : 3, Posbility: 0.9922
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3
Next Token : ), Posbility: 0.9883
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3)
Next Token :  with, Posbility: 0.9922
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with

Next Token :     , Posbility: 0.9805
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    
Next Token : |, Posbility: 0.9531
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    |
Next Token :  , Posbility: 0.7148
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | 
Next Token : ([], Posbility: 0.6562
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([]
Next Token : ,, Posbility: 0.9805
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([],
Next Token :  [],, Posbility: 0.5898
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [],
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], 
Next Token : []), Posbility: 0.8672
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], [])
Next Token :  , Posbility: 0.6953
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) 
Next Token : ->, Posbility: 0.9844
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) ->
Next Token :  [], Posbility: 0.9531
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
Next Token : 
, Posbility: 0.9531
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    |
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | 
Next Token : (, Posbility: 0.3418
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (
Next Token : x, Posbility: 0.2314
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x
Next Token : ,, Posbility: 0.3672
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x,
Next Token :  [],, Posbility: 0.5312
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [],
Next Token :  , Posbility: 0.8164
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], 
Next Token : []), Posbility: 0.5430
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], [])
Next Token :  , Posbility: 0.8633
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) ->
Next Token :  [, Posbility: 0.7812
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [
Next Token : x, Posbility: 0.9453
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x
Next Token : ], Posbility: 0.9844
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    |
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | 
Next Token : ([], Posbility: 0.8750
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([]
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([],
Next Token :  , Posbility: 0.6562
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], 
Next Token : x, Posbility: 0.5625
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x
Next Token : ,, Posbility: 0.9570
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x,
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, 
Next Token : []), Posbility: 0.9766
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, [])
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) ->
Next Token :  [, Posbility: 0.8633
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    |
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | 
Next Token : ([], Posbility: 0.7812
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([]
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([],
Next Token :  [],, Posbility: 0.9492
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [],
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], 
Next Token : x, Posbility: 0.9453
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x
Next Token : ), Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x)
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) ->
Next Token :  [, Posbility: 0.9766
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    |
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | 
Next Token : (, Posbility: 0.6953
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (
Next Token : x, Posbility: 0.9023
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x
Next Token : ,, Posbility: 0.6953
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x,
Next Token :  , Posbility: 0.7930
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, 
Next Token : x, Posbility: 0.4395
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, x
Next Token : s, Posbility: 0.3535
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs
Next Token : ,, Posbility: 0.7188
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs,
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, 
Next Token : y, Posbility: 0.5195
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y
Next Token : ), Posbility: 0.4980
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y)
Next Token :  , Posbility: 0.7109
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) 
Next Token : ->, Posbility: 0.7031
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
Next Token : 
, Posbility: 0.8555
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->

Next Token :       , Posbility: 0.5508
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      
Next Token : if, Posbility: 0.5781
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if
Next Token :  , Posbility: 0.8906
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if 
Next Token : x, Posbility: 0.8594
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x
Next Token :  =, Posbility: 0.6641
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x =
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = 
Next Token : x, Posbility: 0.4980
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = x
Next Token : s, Posbility: 0.9453
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs
Next Token : [0], Posbility: 0.2578
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0]
Next Token :  then, Posbility: 0.7344
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
Next Token : 
, Posbility: 0.4766
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then

Next Token :         , Posbility: 0.9648
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        
Next Token : common, Posbility: 0.7109
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_
Next Token : elements, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_
Next Token : aux, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux
Next Token :  , Posbility: 0.8750
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux 
Next Token : x, Posbility: 0.7188
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux x
Next Token : s, Posbility: 0.6133
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs
Next Token :  , Posbility: 0.8594
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs 
Next Token : y, Posbility: 0.6250
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y
Next Token :  , Posbility: 0.5117
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y 
Next Token : (, Posbility: 0.5195
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (
Next Token : x, Posbility: 0.6406
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (x
Next Token : s, Posbility: 0.6602
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs
Next Token :  , Posbility: 0.8281
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs 
Next Token : :, Posbility: 0.3633
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs :
Next Token :  , Posbility: 0.9219
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : 
Next Token : x, Posbility: 0.9648
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : x
Next Token : s, Posbility: 0.9688
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs
Next Token : ), Posbility: 0.5312
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
Next Token : 
, Posbility: 0.9453
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)

Next Token :       , Posbility: 0.9492
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
Next Token : 
, Posbility: 0.7500
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else

Next Token :         , Posbility: 0.9883
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        
Next Token : common, Posbility: 0.5625
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_
Next Token : elements, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements
Next Token : _, Posbility: 0.9648
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_
Next Token : aux, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux
Next Token :  , Posbility: 0.8867
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux 
Next Token : x, Posbility: 0.8398
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux x
Next Token : s, Posbility: 0.5586
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs
Next Token :  , Posbility: 0.8906
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs 
Next Token : y, Posbility: 0.5742
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y
Next Token :  , Posbility: 0.9141
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y 
Next Token : (, Posbility: 0.7031
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (
Next Token : x, Posbility: 0.7578
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (x
Next Token : s, Posbility: 0.9219
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs 
Next Token : :, Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs :
Next Token :  , Posbility: 0.8789
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : 
Next Token : x, Posbility: 0.7891
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : x
Next Token : s, Posbility: 0.9531
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs
Next Token : ), Posbility: 0.9336
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
Next Token : 
, Posbility: 0.8203
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)

Next Token :     , Posbility: 0.4258
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    
Next Token : |, Posbility: 0.9688
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    |
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | 
Next Token : (, Posbility: 0.8477
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (
Next Token : x, Posbility: 0.9180
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x
Next Token : ,, Posbility: 0.9219
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x,
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, 
Next Token : x, Posbility: 0.9414
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, x
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs
Next Token : ,, Posbility: 0.9570
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs,
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, 
Next Token : y, Posbility: 0.6719
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y
Next Token : ), Posbility: 0.9648
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y)
Next Token :  , Posbility: 0.8086
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) 
Next Token : ->, Posbility: 0.9531
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
Next Token : 
, Posbility: 0.9336
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->

Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      
Next Token : if, Posbility: 0.8203
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if 
Next Token : x, Posbility: 0.9609
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x
Next Token :  =, Posbility: 0.9531
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = 
Next Token : x, Posbility: 0.7305
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs
Next Token : [0], Posbility: 0.9492
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0]
Next Token :  then, Posbility: 0.8438
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
Next Token : 
, Posbility: 0.9570
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then

Next Token :         , Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        
Next Token : common, Posbility: 0.6133
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_
Next Token : elements, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_
Next Token : aux, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux 
Next Token : x, Posbility: 0.6602
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux x
Next Token : s, Posbility: 0.8516
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs 
Next Token : y, Posbility: 0.7852
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y 
Next Token : (, Posbility: 0.8945
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (
Next Token : x, Posbility: 0.8477
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (x
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs 
Next Token : :, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs :
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : 
Next Token : x, Posbility: 0.9258
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : x
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs
Next Token : ), Posbility: 0.9727
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
Next Token : 
, Posbility: 0.9688
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)

Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
Next Token : 
, Posbility: 0.8633
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else

Next Token :         , Posbility: 0.9883
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        
Next Token : common, Posbility: 0.3926
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_
Next Token : elements, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements
Next Token : _, Posbility: 0.9648
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_
Next Token : aux, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux 
Next Token : x, Posbility: 0.8633
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux x
Next Token : s, Posbility: 0.8789
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs 
Next Token : y, Posbility: 0.9062
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y 
Next Token : (, Posbility: 0.8984
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (
Next Token : x, Posbility: 0.8789
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (x
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs 
Next Token : :, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs :
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : 
Next Token : x, Posbility: 0.8906
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : x
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs
Next Token : ), Posbility: 0.9336
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
Next Token : 
, Posbility: 0.7383
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)

Next Token :   , Posbility: 0.5469
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
  
Next Token : in, Posbility: 0.9805
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
  in
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
  in

Next Token :   , Posbility: 0.9883
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
  in
  
Next Token : common, Posbility: 0.9375
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
  in
  common
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
  in
  common_
Next Token : elements, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
  in
  common_elements
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
  in
  common_elements_
Next Token : aux, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
  in
  common_elements_aux
Next Token :  l, Posbility: 0.9648
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
  in
  common_elements_aux l
Next Token : 1, Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
  in
  common_elements_aux l1
Next Token :  l, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
  in
  common_elements_aux l1 l
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
  in
  common_elements_aux l1 l2
Next Token :  l, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
  in
  common_elements_aux l1 l2 l
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
  in
  common_elements_aux l1 l2 l3
Next Token : 
, Posbility: 0.5859
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
    | (x, xs, y) ->
      if x = xs[0] then
        common_elements_aux xs y (xs : xs)
      else
        common_elements_aux xs y (xs : xs)
  in
  common_elements_aux l1 l2 l3

Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END--------

processing time : :9.068270206451416

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>