code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let
Next Token :  , Posbility: 0.1807
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let 
Next Token : length, Posbility: 0.1787
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length
Next Token : _, Posbility: 0.6328
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_
Next Token : four, Posbility: 0.2139
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four
Next Token :  =, Posbility: 0.3926
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four =
Next Token :  function, Posbility: 0.3594
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
Next Token : 
, Posbility: 0.6016
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function

Next Token :   , Posbility: 0.7461
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  
Next Token : |, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  |
Next Token :  , Posbility: 0.3477
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | 
Next Token : _, Posbility: 0.1758
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _
Next Token :  , Posbility: 0.8086
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ 
Next Token : ->, Posbility: 0.8633
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ ->
Next Token :  false, Posbility: 0.6758
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false

Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  |
Next Token :  , Posbility: 0.5508
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | 
Next Token : s, Posbility: 0.2354
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s
Next Token :  , Posbility: 0.8945
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s 
Next Token : ->, Posbility: 0.9453
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s ->
Next Token :  , Posbility: 0.5781
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> 
Next Token : s, Posbility: 0.6172
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s
Next Token : ., Posbility: 0.7383
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.
Next Token : Length, Posbility: 0.9219
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length
Next Token :  >=, Posbility: 0.6367
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >=
Next Token :  4, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
Next Token : 
, Posbility: 0.5117
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4

Next Token : in, Posbility: 0.2852
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
Next Token : 
, Posbility: 0.7461
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in

Next Token : let, Posbility: 0.7148
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let
Next Token :  rec, Posbility: 0.2695
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec
Next Token :  , Posbility: 0.2695
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec 
Next Token : length, Posbility: 0.4473
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length
Next Token : _, Posbility: 0.9531
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_
Next Token : four, Posbility: 0.9297
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four
Next Token : _, Posbility: 0.8047
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_
Next Token : rec, Posbility: 0.3008
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec
Next Token :  , Posbility: 0.6719
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec 
Next Token : s, Posbility: 0.7969
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s
Next Token :  =, Posbility: 0.7266
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
Next Token : 
, Posbility: 0.8984
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =

Next Token :   , Posbility: 0.9727
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  
Next Token : if, Posbility: 0.4648
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if
Next Token :  , Posbility: 0.9102
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if 
Next Token : length, Posbility: 0.6992
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_
Next Token : four, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s
Next Token :  then, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then
Next Token :  , Posbility: 0.5039
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then 
Next Token : s, Posbility: 0.7461
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
Next Token : 
, Posbility: 0.5508
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s

Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  
Next Token : else, Posbility: 0.8789
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else
Next Token :  , Posbility: 0.7852
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else 
Next Token : length, Posbility: 0.6641
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_
Next Token : four, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_
Next Token : rec, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec 
Next Token : (, Posbility: 0.9180
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (
Next Token : s, Posbility: 0.4746
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s
Next Token : ., Posbility: 0.4570
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.
Next Token : Sub, Posbility: 0.2578
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Sub
Next Token : string, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring
Next Token : (1)), Posbility: 0.3828
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
Next Token : 
, Posbility: 0.7070
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))

Next Token : in, Posbility: 0.5078
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
Next Token : 
, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in

Next Token : let, Posbility: 0.8867
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let
Next Token :  rec, Posbility: 0.3711
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec
Next Token :  , Posbility: 0.3809
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec 
Next Token : length, Posbility: 0.8047
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_
Next Token : four, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four
Next Token : _, Posbility: 0.9141
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_
Next Token : iter, Posbility: 0.3379
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter
Next Token :  , Posbility: 0.8984
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter 
Next Token : s, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s
Next Token :  =, Posbility: 0.9492
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
Next Token : 
, Posbility: 0.9531
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =

Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  
Next Token : if, Posbility: 0.4062
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if 
Next Token : length, Posbility: 0.8984
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_
Next Token : four, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s
Next Token :  then, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then
Next Token :  , Posbility: 0.8398
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then 
Next Token : s, Posbility: 0.8438
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
Next Token : 
, Posbility: 0.9414
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else
Next Token :  , Posbility: 0.7969
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else 
Next Token : length, Posbility: 0.5820
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_
Next Token : four, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_
Next Token : iter, Posbility: 0.9531
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter 
Next Token : (, Posbility: 0.9570
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (
Next Token : s, Posbility: 0.9336
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s
Next Token : ., Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.
Next Token : Sub, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Sub
Next Token : string, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring
Next Token : (1)), Posbility: 0.9141
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
Next Token : 
, Posbility: 0.7266
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))

Next Token : in, Posbility: 0.9336
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
Next Token : 
, Posbility: 0.8516
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in

Next Token : let, Posbility: 0.8672
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let
Next Token :  rec, Posbility: 0.5000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec
Next Token :  , Posbility: 0.6680
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec 
Next Token : length, Posbility: 0.8984
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_
Next Token : four, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four
Next Token : _, Posbility: 0.9180
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_
Next Token : iter, Posbility: 0.3770
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter
Next Token : _, Posbility: 0.4824
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_
Next Token : opt, Posbility: 0.1914
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s
Next Token :  =, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  
Next Token : if, Posbility: 0.6211
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if 
Next Token : length, Posbility: 0.8867
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_
Next Token : four, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s
Next Token :  then, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then
Next Token :  , Posbility: 0.4785
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then 
Next Token : s, Posbility: 0.9102
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
Next Token : 
, Posbility: 0.9258
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else
Next Token :  , Posbility: 0.7461
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else 
Next Token : (, Posbility: 0.1709
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (
Next Token : Some, Posbility: 0.1621
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some 
Next Token : s, Posbility: 0.9492
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s
Next Token : ,, Posbility: 0.4570
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s,
Next Token :  , Posbility: 0.4141
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, 
Next Token : s, Posbility: 0.3652
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s
Next Token : ., Posbility: 0.7188
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.
Next Token : Sub, Posbility: 0.8750
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Sub
Next Token : string, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring
Next Token : (1)), Posbility: 0.9727
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
Next Token : 
, Posbility: 0.7852
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))

Next Token : in, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
Next Token : 
, Posbility: 0.8516
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in

Next Token : let, Posbility: 0.8477
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let
Next Token :  rec, Posbility: 0.7500
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec
Next Token :  , Posbility: 0.8281
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec 
Next Token : length, Posbility: 0.9414
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_
Next Token : four, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_
Next Token : iter, Posbility: 0.4473
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter
Next Token : _, Posbility: 0.9102
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_
Next Token : opt, Posbility: 0.5156
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt
Next Token : _, Posbility: 0.6211
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_
Next Token : opt, Posbility: 0.1445
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt
Next Token :  , Posbility: 0.9219
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  
Next Token : if, Posbility: 0.7812
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if 
Next Token : length, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_
Next Token : four, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s
Next Token :  then, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then
Next Token :  , Posbility: 0.8633
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then 
Next Token : (, Posbility: 0.4961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (
Next Token : Some, Posbility: 0.8125
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s
Next Token : ,, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s,
Next Token :  , Posbility: 0.9102
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s
Next Token : ., Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.
Next Token : Sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Sub
Next Token : string, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring
Next Token : (1)), Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
Next Token : 
, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else
Next Token :  , Posbility: 0.6875
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else 
Next Token : (, Posbility: 0.9570
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (
Next Token : None, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None,
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s
Next Token : ., Posbility: 0.7266
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.
Next Token : Sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Sub
Next Token : string, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring
Next Token : (1)), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
Next Token : 
, Posbility: 0.9062
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))

Next Token : in, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
Next Token : 
, Posbility: 0.8164
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in

Next Token : let, Posbility: 0.8047
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let
Next Token :  rec, Posbility: 0.7812
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec
Next Token :  , Posbility: 0.8594
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec 
Next Token : length, Posbility: 0.9570
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_
Next Token : four, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_
Next Token : iter, Posbility: 0.6562
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter
Next Token : _, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_
Next Token : opt, Posbility: 0.7031
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt
Next Token : _, Posbility: 0.9258
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_
Next Token : opt, Posbility: 0.6016
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt
Next Token : _, Posbility: 0.6914
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_
Next Token : opt, Posbility: 0.3477
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  
Next Token : if, Posbility: 0.8984
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if 
Next Token : length, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_
Next Token : four, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s
Next Token :  then, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then
Next Token :  , Posbility: 0.8750
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then 
Next Token : (, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (
Next Token : Some, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some 
Next Token : s, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s,
Next Token :  , Posbility: 0.9219
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.
Next Token : Sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Sub
Next Token : string, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring
Next Token : (1)), Posbility: 0.9492
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else
Next Token :  , Posbility: 0.8789
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else 
Next Token : (, Posbility: 0.9375
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (
Next Token : None, Posbility: 0.8984
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None,
Next Token :  None, Posbility: 0.6992
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None
Next Token : ), Posbility: 0.5586
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
Next Token : 
, Posbility: 0.9023
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)

Next Token : in, Posbility: 0.9062
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
Next Token : 
, Posbility: 0.9375
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in

Next Token : let, Posbility: 0.8164
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let
Next Token :  rec, Posbility: 0.7617
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec
Next Token :  , Posbility: 0.8711
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec 
Next Token : length, Posbility: 0.9648
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_
Next Token : four, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_
Next Token : iter, Posbility: 0.7930
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_
Next Token : opt, Posbility: 0.8594
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_
Next Token : opt, Posbility: 0.8945
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt
Next Token : _, Posbility: 0.9688
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_
Next Token : opt, Posbility: 0.9141
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt
Next Token : _, Posbility: 0.8867
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_
Next Token : opt, Posbility: 0.8281
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  
Next Token : if, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if 
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_
Next Token : four, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then 
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (
Next Token : Some, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s,
Next Token :  , Posbility: 0.8672
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.
Next Token : Sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Sub
Next Token : string, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring
Next Token : (1)), Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else 
Next Token : (, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (
Next Token : None, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None,
Next Token :  None, Posbility: 0.9062
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None
Next Token : ,, Posbility: 0.9219
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None,
Next Token :  None, Posbility: 0.7852
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None
Next Token : ), Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
Next Token : 
, Posbility: 0.9570
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)

Next Token : in, Posbility: 0.9453
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in

Next Token : let, Posbility: 0.8320
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let
Next Token :  rec, Posbility: 0.8203
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec
Next Token :  , Posbility: 0.9062
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec 
Next Token : length, Posbility: 0.9648
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_
Next Token : four, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_
Next Token : iter, Posbility: 0.8477
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_
Next Token : opt, Posbility: 0.8867
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_
Next Token : opt, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_
Next Token : opt, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_
Next Token : opt, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt
Next Token : _, Posbility: 0.9102
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_
Next Token : opt, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  
Next Token : if, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if 
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_
Next Token : four, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then 
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (
Next Token : Some, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.
Next Token : Sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Sub
Next Token : string, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring
Next Token : (1)), Posbility: 0.9609
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else 
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (
Next Token : None, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None,
Next Token :  None, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None,
Next Token :  None, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None,
Next Token :  None, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None
Next Token : ), Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
Next Token : 
, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)

Next Token : in, Posbility: 0.9453
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
Next Token : 
, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in

Next Token : let, Posbility: 0.8672
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let
Next Token :  rec, Posbility: 0.8242
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec
Next Token :  , Posbility: 0.9258
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec 
Next Token : length, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_
Next Token : four, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_
Next Token : iter, Posbility: 0.8945
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_
Next Token : opt, Posbility: 0.9258
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_
Next Token : opt, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_
Next Token : opt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt
Next Token : _, Posbility: 0.9570
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if 
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_
Next Token : four, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then 
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (
Next Token : Some, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.
Next Token : Sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Sub
Next Token : string, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring
Next Token : (1)), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else 
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (
Next Token : None, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
Next Token : 
, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)

Next Token : in, Posbility: 0.9531
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in

Next Token : let, Posbility: 0.9023
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let
Next Token :  rec, Posbility: 0.8281
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec 
Next Token : length, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_
Next Token : four, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_
Next Token : iter, Posbility: 0.9062
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_
Next Token : opt, Posbility: 0.9453
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_
Next Token : opt, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 0.9688
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if 
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_
Next Token : four, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then 
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (
Next Token : Some, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.
Next Token : Sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Sub
Next Token : string, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring
Next Token : (1)), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else 
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (
Next Token : None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
Next Token : 
, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)

Next Token : in, Posbility: 0.9375
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in

Next Token : let, Posbility: 0.9023
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let
Next Token :  rec, Posbility: 0.8711
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec 
Next Token : length, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_
Next Token : four, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_
Next Token : iter, Posbility: 0.9258
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_
Next Token : opt, Posbility: 0.9492
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_
Next Token : opt, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if 
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_
Next Token : four, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then 
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (
Next Token : Some, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.
Next Token : Sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Sub
Next Token : string, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring
Next Token : (1)), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else 
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (
Next Token : None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)

Next Token : in, Posbility: 0.9375
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
Next Token : 
, Posbility: 0.9570
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in

Next Token : let, Posbility: 0.9219
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let
Next Token :  rec, Posbility: 0.8828
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec 
Next Token : length, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_
Next Token : four, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_
Next Token : iter, Posbility: 0.9258
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_
Next Token : opt, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_
Next Token : opt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if 
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_
Next Token : four, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then 
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (
Next Token : Some, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.
Next Token : Sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Sub
Next Token : string, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring
Next Token : (1)), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else 
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (
Next Token : None, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)

Next Token : in, Posbility: 0.9375
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in

Next Token : let, Posbility: 0.9297
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let
Next Token :  rec, Posbility: 0.8906
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec 
Next Token : length, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_
Next Token : four, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_
Next Token : iter, Posbility: 0.9414
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_
Next Token : opt, Posbility: 0.9688
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_
Next Token : opt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 0.9570
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if 
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_
Next Token : four, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then 
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (
Next Token : Some, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.
Next Token : Sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Sub
Next Token : string, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring
Next Token : (1)), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else 
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (
Next Token : None, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)

Next Token : in, Posbility: 0.9453
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
Next Token : 
, Posbility: 0.9688
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in

Next Token : let, Posbility: 0.9258
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let
Next Token :  rec, Posbility: 0.8945
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec 
Next Token : length, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_
Next Token : four, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_
Next Token : iter, Posbility: 0.9531
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_
Next Token : opt, Posbility: 0.9688
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_
Next Token : opt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 0.9023
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if 
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_
Next Token : four, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then 
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (
Next Token : Some, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.
Next Token : Sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Sub
Next Token : string, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring
Next Token : (1)), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else 
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (
Next Token : None, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None
Next Token : ), Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)

Next Token : in, Posbility: 0.9453
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
Next Token : 
, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in

Next Token : let, Posbility: 0.9219
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let
Next Token :  rec, Posbility: 0.8867
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec 
Next Token : length, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_
Next Token : four, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_
Next Token : iter, Posbility: 0.9570
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_
Next Token : opt, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_
Next Token : opt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 0.5547
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if 
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_
Next Token : four, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then 
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (
Next Token : Some, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.
Next Token : Sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Sub
Next Token : string, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring
Next Token : (1)), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else 
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (
Next Token : None, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None,
Next Token :  None, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None,
Next Token :  None, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None
Next Token : ), Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)

Next Token : in, Posbility: 0.9414
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
Next Token : 
, Posbility: 0.9688
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in

Next Token : let, Posbility: 0.9219
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let
Next Token :  rec, Posbility: 0.9180
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec 
Next Token : length, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_
Next Token : four, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_
Next Token : iter, Posbility: 0.9531
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_
Next Token : opt, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_
Next Token : opt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 0.7227
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt
Next Token :  , Posbility: 0.8711
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if 
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_
Next Token : four, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then 
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (
Next Token : Some, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s,
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.
Next Token : Sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Sub
Next Token : string, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring
Next Token : (1)), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else 
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (
Next Token : None, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None,
Next Token :  None, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None,
Next Token :  None, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None,
Next Token :  None, Posbility: 0.9531
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None
Next Token : ), Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)

Next Token : in, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
Next Token : 
, Posbility: 0.9570
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in

Next Token : let, Posbility: 0.9375
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let
Next Token :  rec, Posbility: 0.9102
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec 
Next Token : length, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_
Next Token : four, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_
Next Token : iter, Posbility: 0.9531
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_
Next Token : opt, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_
Next Token : opt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt
Next Token : _, Posbility: 0.9531
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt
Next Token :  , Posbility: 0.6016
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  
Next Token : if, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if 
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_
Next Token : four, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find all words which are at least 4 characters long in a string. *)
let length_four = function
  | _ -> false
  | s -> s.Length >= 4
in
let rec length_four_rec s =
  if length_four s then s
  else length_four_rec (s.Substring(1))
in
let rec length_four_iter s =
  if length_four s then s
  else length_four_iter (s.Substring(1))
in
let rec length_four_iter_opt s =
  if length_four s then s
  else (Some s, s.Substring(1))
in
let rec length_four_iter_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, s.Substring(1))
in
let rec length_four_iter_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None)
in
let rec length_four_iter_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then (Some s, s.Substring(1))
  else (None, None, None, None, None, None, None, None, None, None, None, None)
in
let rec length_four_iter_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt_opt s =
  if length_four s then


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>