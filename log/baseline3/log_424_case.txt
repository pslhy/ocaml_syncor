code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let
Next Token :  rec, Posbility: 0.4297
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec
Next Token :  , Posbility: 0.3301
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec 
Next Token : odd, Posbility: 0.6094
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd
Next Token : _, Posbility: 0.5977
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_
Next Token : number, Posbility: 0.1797
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number
Next Token : _, Posbility: 0.3945
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_
Next Token : of, Posbility: 0.1123
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of
Next Token : _, Posbility: 0.9297
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_
Next Token : list, Posbility: 0.8281
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list
Next Token :  , Posbility: 0.5898
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list 
Next Token : x, Posbility: 0.2178
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x
Next Token :  =, Posbility: 0.5000
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
Next Token : 
, Posbility: 0.8477
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =

Next Token :   , Posbility: 0.8047
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  
Next Token : match, Posbility: 0.6133
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match 
Next Token : x, Posbility: 0.7500
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x
Next Token :  with, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
Next Token : 
, Posbility: 0.8828
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with

Next Token :   , Posbility: 0.8828
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  
Next Token : |, Posbility: 0.8711
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  |
Next Token :  [], Posbility: 0.9336
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | []
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] 
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] ->
Next Token :  , Posbility: 0.3672
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> 
Next Token : raise, Posbility: 0.3750
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise
Next Token :  Not, Posbility: 0.5938
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_
Next Token : found, Posbility: 0.8867
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
Next Token : 
, Posbility: 0.6758
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found

Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  |
Next Token :  , Posbility: 0.7266
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | 
Next Token : x, Posbility: 0.5742
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x
Next Token : ::, Posbility: 0.5664
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::
Next Token : x, Posbility: 0.4707
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::x
Next Token : s, Posbility: 0.9453
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs
Next Token :  , Posbility: 0.8867
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs 
Next Token : ->, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
Next Token : 
, Posbility: 0.5898
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->

Next Token :       , Posbility: 0.5391
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      
Next Token : if, Posbility: 0.5820
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if
Next Token :  , Posbility: 0.6562
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if 
Next Token : x, Posbility: 0.4766
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x
Next Token :  %, Posbility: 0.4746
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x %
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2
Next Token :  =, Posbility: 0.6680
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 =
Next Token :  0, Posbility: 0.4922
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0
Next Token :  then, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then
Next Token :  , Posbility: 0.6875
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then 
Next Token : odd, Posbility: 0.8750
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_
Next Token : number, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list 
Next Token : x, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs
Next Token : 
, Posbility: 0.4883
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs

Next Token :       , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs
      
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs
      else
Next Token :  , Posbility: 0.8867
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs
      else 
Next Token : odd, Posbility: 0.8594
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs
      else odd
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs
      else odd_
Next Token : number, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs
      else odd_number
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs
      else odd_number_
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs
      else odd_number_of
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs
      else odd_number_of_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs
      else odd_number_of_list
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs
      else odd_number_of_list 
Next Token : x, Posbility: 0.6211
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs
      else odd_number_of_list x
Next Token : s, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs
      else odd_number_of_list xs
Next Token : 
, Posbility: 0.4941
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs
      else odd_number_of_list xs

Next Token :   , Posbility: 0.5938
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs
      else odd_number_of_list xs
  
Next Token : |, Posbility: 0.7773
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs
      else odd_number_of_list xs
  |
Next Token :  , Posbility: 0.8555
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs
      else odd_number_of_list xs
  | 
Next Token : _, Posbility: 0.5742
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs
      else odd_number_of_list xs
  | _
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs
      else odd_number_of_list xs
  | _ 
Next Token : ->, Posbility: 0.9570
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs
      else odd_number_of_list xs
  | _ ->
Next Token :  , Posbility: 0.8164
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs
      else odd_number_of_list xs
  | _ -> 
Next Token : raise, Posbility: 0.7031
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs
      else odd_number_of_list xs
  | _ -> raise
Next Token :  Not, Posbility: 0.9570
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs
      else odd_number_of_list xs
  | _ -> raise Not
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs
      else odd_number_of_list xs
  | _ -> raise Not_
Next Token : found, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the first odd number in a given list of numbers. *)
let rec odd_number_of_list x =
  match x with
  | [] -> raise Not_found
  | x::xs ->
      if x % 2 = 0 then odd_number_of_list xs
      else odd_number_of_list xs
  | _ -> raise Not_found
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END--------

processing time : :3.769399642944336

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>