code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let
Next Token :  rec, Posbility: 0.3516
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec
Next Token :  , Posbility: 0.3457
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec 
Next Token : print, Posbility: 0.2812
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print
Next Token : _, Posbility: 0.8320
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_
Next Token : list, Posbility: 0.4531
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list
Next Token :  , Posbility: 0.4336
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list 
Next Token : f, Posbility: 0.4727
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f
Next Token :  =, Posbility: 0.2598
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
Next Token : 
, Posbility: 0.4961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =

Next Token :   , Posbility: 0.8477
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  
Next Token : match, Posbility: 0.6758
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match
Next Token :  , Posbility: 0.8320
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match 
Next Token : List, Posbility: 0.4648
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List
Next Token : ., Posbility: 0.9883
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.
Next Token : hd, Posbility: 0.2500
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd
Next Token :  , Posbility: 0.6836
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd 
Next Token : lst, Posbility: 0.1855
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst
Next Token :  with, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with

Next Token :   , Posbility: 0.9336
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  
Next Token : |, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  |
Next Token :  [], Posbility: 0.7148
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | []
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] ->
Next Token :  , Posbility: 0.8398
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> 
Next Token : (), Posbility: 0.7852
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
Next Token : 
, Posbility: 0.9453
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  |
Next Token :  , Posbility: 0.9062
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | 
Next Token : x, Posbility: 0.5820
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x
Next Token :  , Posbility: 0.8516
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x 
Next Token : ::, Posbility: 0.5312
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x ::
Next Token :  , Posbility: 0.9258
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: 
Next Token : x, Posbility: 0.6875
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: x
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs 
Next Token : ->, Posbility: 0.9805
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs ->
Next Token :  , Posbility: 0.7930
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> 
Next Token : f, Posbility: 0.4277
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f 
Next Token : x, Posbility: 0.9648
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x
Next Token :  , Posbility: 0.4922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x 
Next Token : ;, Posbility: 0.5352
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ;
Next Token :  , Posbility: 0.8047
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; 
Next Token : print, Posbility: 0.9844
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list 
Next Token : f, Posbility: 0.9688
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f 
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
Next Token : 
, Posbility: 0.5859
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs

Next Token : let, Posbility: 0.6328
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let
Next Token :  rec, Posbility: 0.4121
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec
Next Token :  , Posbility: 0.6484
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec 
Next Token : print, Posbility: 0.7852
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print
Next Token : _, Posbility: 0.9570
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_
Next Token : list, Posbility: 0.4961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list
Next Token : _, Posbility: 0.7266
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_
Next Token : fmt, Posbility: 0.0796
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt
Next Token :  , Posbility: 0.6875
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt 
Next Token : f, Posbility: 0.8984
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f
Next Token :  fmt, Posbility: 0.5195
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt
Next Token :  =, Posbility: 0.9141
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
Next Token : 
, Posbility: 0.9219
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =

Next Token :   , Posbility: 0.9844
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  
Next Token : match, Posbility: 0.7969
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match 
Next Token : List, Posbility: 0.9883
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd 
Next Token : lst, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  |
Next Token :  [], Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | []
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] ->
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> 
Next Token : (), Posbility: 0.9805
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  |
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | 
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x 
Next Token : ::, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x ::
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: 
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs ->
Next Token :  , Posbility: 0.8477
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> 
Next Token : f, Posbility: 0.5117
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f
Next Token :  fmt, Posbility: 0.4629
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt 
Next Token : x, Posbility: 0.9609
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x 
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ;
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; 
Next Token : print, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list
Next Token : _, Posbility: 0.9492
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt 
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f
Next Token :  fmt, Posbility: 0.9844
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
Next Token : 
, Posbility: 0.5547
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs

Next Token : let, Posbility: 0.6641
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let
Next Token :  rec, Posbility: 0.6172
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec
Next Token :  , Posbility: 0.7656
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec 
Next Token : print, Posbility: 0.8633
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_
Next Token : list, Posbility: 0.7656
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list
Next Token : _, Posbility: 0.9453
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_
Next Token : fmt, Posbility: 0.4395
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt
Next Token : _, Posbility: 0.6875
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_
Next Token : fmt, Posbility: 0.1030
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt
Next Token :  , Posbility: 0.8125
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt 
Next Token : f, Posbility: 0.9883
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f
Next Token :  fmt, Posbility: 0.8594
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt
Next Token :  fmt, Posbility: 0.5078
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt
Next Token :  =, Posbility: 0.9141
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =

Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  
Next Token : match, Posbility: 0.9844
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match 
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd 
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  |
Next Token :  [], Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | []
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] ->
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> 
Next Token : (), Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  |
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | 
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x 
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x ::
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs ->
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> 
Next Token : f, Posbility: 0.9844
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f
Next Token :  fmt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt
Next Token :  fmt, Posbility: 0.6680
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt 
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x 
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ;
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; 
Next Token : print, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt
Next Token : _, Posbility: 0.9648
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt 
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt
Next Token :  fmt, Posbility: 0.9766
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
Next Token : 
, Posbility: 0.6172
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs

Next Token : let, Posbility: 0.8164
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let
Next Token :  rec, Posbility: 0.7656
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec
Next Token :  , Posbility: 0.8398
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec 
Next Token : print, Posbility: 0.8984
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_
Next Token : list, Posbility: 0.8359
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list
Next Token : _, Posbility: 0.9766
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_
Next Token : fmt, Posbility: 0.5547
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt
Next Token : _, Posbility: 0.8867
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_
Next Token : fmt, Posbility: 0.7578
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt
Next Token : _, Posbility: 0.9336
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_
Next Token : fmt, Posbility: 0.7695
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt
Next Token :  , Posbility: 0.9180
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt 
Next Token : f, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f
Next Token :  fmt, Posbility: 0.9883
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt
Next Token :  fmt, Posbility: 0.9297
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt
Next Token :  fmt, Posbility: 0.9883
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt
Next Token :  =, Posbility: 0.8086
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =

Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  
Next Token : match, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match 
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd 
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  |
Next Token :  [], Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | []
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] ->
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> 
Next Token : (), Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  |
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x 
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x ::
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs ->
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> 
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt
Next Token :  fmt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x 
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ;
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; 
Next Token : print, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt 
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt
Next Token :  fmt, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
Next Token : 
, Posbility: 0.6758
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs

Next Token : let, Posbility: 0.9102
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let
Next Token :  rec, Posbility: 0.8711
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec
Next Token :  , Posbility: 0.8945
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec 
Next Token : print, Posbility: 0.9414
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_
Next Token : list, Posbility: 0.9141
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_
Next Token : fmt, Posbility: 0.8164
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_
Next Token : fmt, Posbility: 0.9648
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_
Next Token : fmt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_
Next Token : fmt, Posbility: 0.9688
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt 
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  
Next Token : match, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match 
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd 
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  |
Next Token :  [], Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | []
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] ->
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> 
Next Token : (), Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  |
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x 
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x ::
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs ->
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> 
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt
Next Token :  fmt, Posbility: 0.9805
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x 
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ;
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; 
Next Token : print, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt 
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt
Next Token :  fmt, Posbility: 0.6484
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
Next Token : 
, Posbility: 0.6758
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs

Next Token : let, Posbility: 0.9414
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let
Next Token :  rec, Posbility: 0.8984
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec
Next Token :  , Posbility: 0.9180
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec 
Next Token : print, Posbility: 0.9570
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_
Next Token : list, Posbility: 0.9414
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_
Next Token : fmt, Posbility: 0.8789
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_
Next Token : fmt, Posbility: 0.9844
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_
Next Token : fmt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 0.9766
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt
Next Token :  , Posbility: 0.9219
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt 
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt
Next Token :  fmt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  
Next Token : match, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match 
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd 
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  |
Next Token :  [], Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | []
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] ->
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> 
Next Token : (), Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  |
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x 
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x ::
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs ->
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> 
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x 
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ;
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; 
Next Token : print, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt 
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt
Next Token :  fmt, Posbility: 0.9219
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
Next Token : 
, Posbility: 0.6484
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs

Next Token : let, Posbility: 0.9531
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let
Next Token :  rec, Posbility: 0.9180
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec 
Next Token : print, Posbility: 0.9688
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_
Next Token : list, Posbility: 0.9609
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_
Next Token : fmt, Posbility: 0.9219
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_
Next Token : fmt, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt
Next Token :  , Posbility: 0.9023
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt 
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  
Next Token : match, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match 
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd 
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  |
Next Token :  [], Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | []
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] ->
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> 
Next Token : (), Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  |
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x 
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x ::
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs ->
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> 
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x 
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ;
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; 
Next Token : print, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 0.9609
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt 
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 0.9883
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
Next Token : 
, Posbility: 0.6758
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs

Next Token : let, Posbility: 0.9531
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let
Next Token :  rec, Posbility: 0.9102
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec 
Next Token : print, Posbility: 0.9766
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_
Next Token : list, Posbility: 0.9727
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_
Next Token : fmt, Posbility: 0.9531
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_
Next Token : fmt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt
Next Token :  , Posbility: 0.8516
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt 
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt
Next Token :  =, Posbility: 0.9883
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  
Next Token : match, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match 
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd 
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  |
Next Token :  [], Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | []
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] ->
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> 
Next Token : (), Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  |
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x 
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x ::
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs ->
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> 
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 0.8164
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x 
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ;
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; 
Next Token : print, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt 
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 0.9141
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
Next Token : 
, Posbility: 0.7305
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs

Next Token : let, Posbility: 0.9570
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let
Next Token :  rec, Posbility: 0.9570
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec 
Next Token : print, Posbility: 0.9844
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_
Next Token : list, Posbility: 0.9844
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_
Next Token : fmt, Posbility: 0.9609
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_
Next Token : fmt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 0.7695
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt
Next Token :  , Posbility: 0.8516
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt 
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 0.9766
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt
Next Token :  =, Posbility: 0.8789
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  
Next Token : match, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match 
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd 
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  |
Next Token :  [], Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | []
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] ->
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> 
Next Token : (), Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  |
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x 
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x ::
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs ->
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> 
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 0.9023
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x 
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ;
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; 
Next Token : print, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 0.8516
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt 
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 0.7969
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
Next Token : 
, Posbility: 0.7969
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs

Next Token : let, Posbility: 0.9609
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let
Next Token :  rec, Posbility: 0.9648
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec 
Next Token : print, Posbility: 0.9883
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_
Next Token : list, Posbility: 0.9883
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_
Next Token : fmt, Posbility: 0.9766
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_
Next Token : fmt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt
Next Token :  , Posbility: 0.9023
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt 
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 0.9609
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt
Next Token :  =, Posbility: 0.6172
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  
Next Token : match, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match 
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd 
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  |
Next Token :  [], Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | []
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] ->
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> 
Next Token : (), Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  |
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x 
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x ::
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs ->
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> 
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt
Next Token :  , Posbility: 0.6211
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x 
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ;
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; 
Next Token : print, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt
Next Token :  , Posbility: 0.5625
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt 
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
Next Token : 
, Posbility: 0.7969
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs

Next Token : let, Posbility: 0.9648
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let
Next Token :  rec, Posbility: 0.9609
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec 
Next Token : print, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_
Next Token : list, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_
Next Token : fmt, Posbility: 0.9883
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_
Next Token : fmt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 0.5352
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt 
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 0.9766
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 0.7734
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt
Next Token :  =, Posbility: 0.9805
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  
Next Token : match, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match 
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd 
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  |
Next Token :  [], Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | []
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] ->
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> 
Next Token : (), Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  |
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x 
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x ::
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs ->
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> 
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt
Next Token :  , Posbility: 0.7031
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x 
Next Token : ;, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ;
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; 
Next Token : print, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 0.8516
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt 
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 0.7969
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt x
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
Next Token : 
, Posbility: 0.8320
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs

Next Token : let, Posbility: 0.9805
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let
Next Token :  rec, Posbility: 0.9609
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec 
Next Token : print, Posbility: 0.9922
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_
Next Token : list, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_
Next Token : fmt, Posbility: 0.9883
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_
Next Token : fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt
Next Token :  , Posbility: 0.8047
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt 
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt
Next Token :  fmt, Posbility: 0.9570
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt
Next Token :  =, Posbility: 0.6172
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  
Next Token : match, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match 
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd 
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  |
Next Token :  [], Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | []
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] 
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] ->
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> 
Next Token : (), Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  |
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | 
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x 
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to apply a given format string to all of the elements in a list. *)
let rec print_list f =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f x ; print_list f xs
let rec print_list_fmt f fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt x ; print_list_fmt f fmt xs
let rec print_list_fmt_fmt f fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt x ; print_list_fmt_fmt f fmt fmt xs
let rec print_list_fmt_fmt_fmt f fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt x ; print_list_fmt_fmt_fmt f fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt f fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x :: xs -> f fmt fmt fmt fmt fmt fmt fmt fmt x ; print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt xs
let rec print_list_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt_fmt f fmt fmt fmt fmt fmt fmt fmt fmt fmt fmt =
  match List.hd lst with
  | [] -> ()
  | x ::


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>