code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let
Next Token :  rec, Posbility: 0.4473
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec
Next Token :  count, Posbility: 0.5938
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count
Next Token : _, Posbility: 0.7891
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_
Next Token : substring, Posbility: 0.4844
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substring
Next Token : s, Posbility: 0.9453
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings
Next Token :  , Posbility: 0.5938
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings 
Next Token : s, Posbility: 0.7305
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s
Next Token :  =, Posbility: 0.7031
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
Next Token : 
, Posbility: 0.8398
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =

Next Token :   , Posbility: 0.8281
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  
Next Token : match, Posbility: 0.4395
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match
Next Token :  , Posbility: 0.5742
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match 
Next Token : s, Posbility: 0.8320
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s
Next Token :  with, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
Next Token : 
, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with

Next Token :   , Posbility: 0.9102
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  
Next Token : |, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  |
Next Token :  [], Posbility: 0.5273
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | []
Next Token :  , Posbility: 0.8984
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] 
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] ->
Next Token :  0, Posbility: 0.7891
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
Next Token : 
, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  |
Next Token :  , Posbility: 0.7305
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | 
Next Token : _, Posbility: 0.4062
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _
Next Token :  , Posbility: 0.8281
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _ 
Next Token : ->, Posbility: 0.6016
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _ ->
Next Token :  1, Posbility: 0.5820
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _ -> 1
Next Token :  +, Posbility: 0.6797
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _ -> 1 +
Next Token :  count, Posbility: 0.8477
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _ -> 1 + count
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _ -> 1 + count_
Next Token : substring, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _ -> 1 + count_substring
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _ -> 1 + count_substrings
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _ -> 1 + count_substrings 
Next Token : (, Posbility: 0.9570
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _ -> 1 + count_substrings (
Next Token : String, Posbility: 0.4453
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _ -> 1 + count_substrings (String
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _ -> 1 + count_substrings (String.
Next Token : sub, Posbility: 0.6680
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _ -> 1 + count_substrings (String.sub
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _ -> 1 + count_substrings (String.sub 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _ -> 1 + count_substrings (String.sub s
Next Token :  0, Posbility: 0.5898
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _ -> 1 + count_substrings (String.sub s 0
Next Token :  , Posbility: 0.6445
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _ -> 1 + count_substrings (String.sub s 0 
Next Token : (, Posbility: 0.7539
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _ -> 1 + count_substrings (String.sub s 0 (
Next Token : String, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _ -> 1 + count_substrings (String.sub s 0 (String
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _ -> 1 + count_substrings (String.sub s 0 (String.
Next Token : length, Posbility: 0.9141
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _ -> 1 + count_substrings (String.sub s 0 (String.length
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _ -> 1 + count_substrings (String.sub s 0 (String.length 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _ -> 1 + count_substrings (String.sub s 0 (String.length s
Next Token :  , Posbility: 0.8398
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _ -> 1 + count_substrings (String.sub s 0 (String.length s 
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _ -> 1 + count_substrings (String.sub s 0 (String.length s -
Next Token :  1)), Posbility: 0.9648
---------------------------
code:
 (* Write a  function to count the number of non-empty substrings of a given string. *)
let rec count_substrings s =
  match s with
  | [] -> 0
  | _ -> 1 + count_substrings (String.sub s 0 (String.length s - 1))
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END--------

processing time : :2.530872344970703

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>