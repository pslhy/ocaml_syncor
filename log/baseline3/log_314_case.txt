code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let
Next Token :  rec, Posbility: 0.5391
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec
Next Token :  remove, Posbility: 0.4180
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove
Next Token : _, Posbility: 0.6680
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_
Next Token : k, Posbility: 0.4160
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_k
Next Token : th, Posbility: 0.4316
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth
Next Token :  , Posbility: 0.5195
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth 
Next Token : n, Posbility: 0.1758
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n
Next Token :  , Posbility: 0.2578
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n 
Next Token : x, Posbility: 0.3809
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x
Next Token :  =, Posbility: 0.5547
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
Next Token : 
, Posbility: 0.8477
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =

Next Token :   , Posbility: 0.8047
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  
Next Token : match, Posbility: 0.6055
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match 
Next Token : x, Posbility: 0.5742
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x
Next Token :  with, Posbility: 0.9922
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
Next Token : 
, Posbility: 0.9609
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with

Next Token :   , Posbility: 0.9258
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  
Next Token : |, Posbility: 0.9609
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  |
Next Token :  [], Posbility: 0.9180
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | []
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] 
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] ->
Next Token :  [], Posbility: 0.8906
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
Next Token : 
, Posbility: 0.9688
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  |
Next Token :  , Posbility: 0.7383
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | 
Next Token : x, Posbility: 0.6602
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x
Next Token :  , Posbility: 0.4668
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x 
Next Token : ::, Posbility: 0.9922
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x ::
Next Token :  , Posbility: 0.9219
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: 
Next Token : x, Posbility: 0.8633
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: x
Next Token : s, Posbility: 0.8672
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs
Next Token :  , Posbility: 0.9141
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs 
Next Token : ->, Posbility: 0.9805
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
Next Token : 
, Posbility: 0.4531
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->

Next Token :       , Posbility: 0.5430
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
      
Next Token : if, Posbility: 0.4805
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
      if
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
      if 
Next Token : n, Posbility: 0.9219
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
      if n
Next Token :  =, Posbility: 0.8711
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
      if n =
Next Token :  0, Posbility: 0.4863
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
      if n = 0
Next Token :  then, Posbility: 0.9766
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
      if n = 0 then
Next Token :  , Posbility: 0.6133
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
      if n = 0 then 
Next Token : x, Posbility: 0.9844
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
      if n = 0 then x
Next Token : s, Posbility: 0.9727
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
Next Token : 
, Posbility: 0.7539
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs

Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else
Next Token :  remove, Posbility: 0.8789
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else remove
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else remove_
Next Token : k, Posbility: 1.0000
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else remove_k
Next Token : th, Posbility: 1.0000
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else remove_kth
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else remove_kth 
Next Token : (, Posbility: 0.9531
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else remove_kth (
Next Token : n, Posbility: 0.9844
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else remove_kth (n
Next Token :  , Posbility: 0.7227
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else remove_kth (n 
Next Token : -, Posbility: 0.9961
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else remove_kth (n -
Next Token :  1), Posbility: 0.9961
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else remove_kth (n - 1)
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else remove_kth (n - 1) 
Next Token : x, Posbility: 0.8789
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else remove_kth (n - 1) x
Next Token : s, Posbility: 0.9805
---------------------------
code:
 (* Write a  function which takes a list and returns a list with the same elements, but the k'th element removed. *)
let rec remove_kth n x =
  match x with
  | [] -> []
  | x :: xs ->
      if n = 0 then xs
      else remove_kth (n - 1) xs
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END--------

processing time : :3.1018385887145996

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>