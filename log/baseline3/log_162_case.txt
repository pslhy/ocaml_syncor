code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let
Next Token :  rec, Posbility: 0.6641
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec
Next Token :  , Posbility: 0.6172
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec 
Next Token : div, Posbility: 0.1982
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div
Next Token :  , Posbility: 0.2852
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div 
Next Token : x, Posbility: 0.4199
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x 
Next Token : y, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y
Next Token :  =, Posbility: 0.9570
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
Next Token : 
, Posbility: 0.8672
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =

Next Token :   , Posbility: 0.8477
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  
Next Token : if, Posbility: 0.5469
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if 
Next Token : y, Posbility: 0.6523
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y
Next Token :  =, Posbility: 0.8203
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y =
Next Token :  0, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0
Next Token :  then, Posbility: 0.9414
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then
Next Token :  , Posbility: 0.5352
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then 
Next Token : raise, Posbility: 0.4043
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise
Next Token :  , Posbility: 0.6836
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise 
Next Token : (, Posbility: 0.6328
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (
Next Token : Div, Posbility: 0.0947
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (Div
Next Token : By, Posbility: 0.3242
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivBy
Next Token : Zero, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZero
Next Token : Exception, Posbility: 0.3770
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException
Next Token :  , Posbility: 0.3828
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException 
Next Token : ()), Posbility: 0.5664
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
Next Token : 
, Posbility: 0.7969
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())

Next Token :   , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  
Next Token : else, Posbility: 0.9570
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else
Next Token :  , Posbility: 0.7227
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else 
Next Token : if, Posbility: 0.6953
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if 
Next Token : x, Posbility: 0.8242
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if x
Next Token :  , Posbility: 0.5664
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if x 
Next Token : <, Posbility: 0.7812
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if x <
Next Token :  , Posbility: 0.4492
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if x < 
Next Token : y, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if x < y
Next Token :  then, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if x < y then
Next Token :  , Posbility: 0.7422
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if x < y then 
Next Token : x, Posbility: 0.5078
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if x < y then x
Next Token :  , Posbility: 0.3711
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if x < y then x 
Next Token : /, Posbility: 0.5938
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if x < y then x /
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if x < y then x / 
Next Token : y, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if x < y then x / y
Next Token :  else, Posbility: 0.4844
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if x < y then x / y else
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if x < y then x / y else 
Next Token : (, Posbility: 0.4609
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if x < y then x / y else (
Next Token : x, Posbility: 0.5898
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if x < y then x / y else (x
Next Token :  , Posbility: 0.9102
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if x < y then x / y else (x 
Next Token : -, Posbility: 0.8984
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if x < y then x / y else (x -
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if x < y then x / y else (x - 
Next Token : y, Posbility: 0.8594
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if x < y then x / y else (x - y
Next Token : ), Posbility: 0.8125
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if x < y then x / y else (x - y)
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if x < y then x / y else (x - y) 
Next Token : /, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if x < y then x / y else (x - y) /
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if x < y then x / y else (x - y) / 
Next Token : y, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find quotient of two numbers (rounded down to the nearest integer). *)
let rec div x y =
  if y = 0 then raise (DivByZeroException ())
  else if x < y then x / y else (x - y) / y
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END--------

processing time : :2.6663520336151123

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>