code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let
Next Token :  rec, Posbility: 0.3555
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec
Next Token :  , Posbility: 0.4688
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec 
Next Token : swap, Posbility: 0.3066
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap
Next Token : _, Posbility: 0.3320
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_
Next Token : count, Posbility: 0.3359
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count
Next Token :  , Posbility: 0.4199
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count 
Next Token : s, Posbility: 0.3066
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s
Next Token :  =, Posbility: 0.4355
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
Next Token : 
, Posbility: 0.8438
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =

Next Token :   , Posbility: 0.8281
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  
Next Token : match, Posbility: 0.3809
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match
Next Token :  , Posbility: 0.5117
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match 
Next Token : s, Posbility: 0.7227
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s
Next Token :  with, Posbility: 0.9336
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
Next Token : 
, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with

Next Token :   , Posbility: 0.8594
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  
Next Token : |, Posbility: 0.9180
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  |
Next Token :  "", Posbility: 0.3906
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | ""
Next Token :  , Posbility: 0.8789
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" 
Next Token : ->, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" ->
Next Token :  0, Posbility: 0.7109
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
Next Token : 
, Posbility: 0.9453
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0

Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  |
Next Token :  , Posbility: 0.7578
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | 
Next Token : _, Posbility: 0.4121
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _
Next Token :  , Posbility: 0.8438
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ 
Next Token : ->, Posbility: 0.6523
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
Next Token : 
, Posbility: 0.4688
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->

Next Token :     , Posbility: 0.6523
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    
Next Token : let, Posbility: 0.7656
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let
Next Token :  , Posbility: 0.5703
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let 
Next Token : s, Posbility: 0.2246
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s
Next Token :  =, Posbility: 0.2656
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s =
Next Token :  , Posbility: 0.4570
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = 
Next Token : s, Posbility: 0.3809
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s
Next Token :  in, Posbility: 0.5742
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in

Next Token :     , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    
Next Token : let, Posbility: 0.5938
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let
Next Token :  , Posbility: 0.6211
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let 
Next Token : s, Posbility: 0.2793
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s
Next Token :  =, Posbility: 0.5898
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s =
Next Token :  , Posbility: 0.6133
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = 
Next Token : s, Posbility: 0.3828
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s
Next Token : ., Posbility: 0.2363
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.
Next Token : [0, Posbility: 0.1836
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0
Next Token : ., Posbility: 0.6055
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0.
Next Token : ., Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..
Next Token : 1], Posbility: 0.2314
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1]
Next Token :  in, Posbility: 0.9180
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in

Next Token :     , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.5898
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 0.9062
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 0.8242
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 0.9492
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 0.8828
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 0.6602
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 0.7227
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.5938
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 0.8789
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.7227
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 0.9453
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 0.9648
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 0.5586
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 0.8945
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.6914
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 0.9180
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 0.9844
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 0.9258
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 0.9727
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.6680
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9141
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 0.9844
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 0.8984
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 0.9844
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.7930
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.7656
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.8789
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.8555
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9141
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.8750
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9414
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9023
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9375
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9180
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9258
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9336
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9570
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9375
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9375
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9570
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..
Next Token : 1], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in

Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    
Next Token : let, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.
Next Token : [, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[
Next Token : 1., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..]
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in

Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    
Next Token : let, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let 
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s =
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = 
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.
Next Token : [0, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0.
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a  function to count minimum number of swaps required to convert one binary number represented as a string to another. *)
let rec swap_count s =
  match s with
  | "" -> 0
  | _ ->
    let s = s in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..1] in
    let s = s.[1..] in
    let s = s.[0..


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>